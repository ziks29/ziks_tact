;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline {
    return (true, to, value, mode, body, null(), null());
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: ProxyMessage
;; Header: 0x8da0f2c7
;; TLB: proxy_message#8da0f2c7 str:^string to:address = ProxyMessage
;;

(slice, ((slice, slice))) $ProxyMessage$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2376135367);
    var v'str = sc_0~load_ref().begin_parse();
    var v'to = sc_0~__tact_load_address();
    return (sc_0, (v'str, v'to));
}

;;
;; Type: ChangeExampleOwner
;; Header: 0xe260297a
;; TLB: change_example_owner#e260297a newOwner:address = ChangeExampleOwner
;;

(slice, ((slice))) $ChangeExampleOwner$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3797952890);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'newOwner));
}

;;
;; Type: LastMessage
;; TLB: _ lastMessage:Maybe ^string lastSender:Maybe address lastReciver:Maybe address = LastMessage
;;

(slice, slice, slice) $LastMessage$_to_external(((slice, slice, slice)) v) inline {
    var (v'lastMessage, v'lastSender, v'lastReciver) = v; 
    return (v'lastMessage, v'lastSender, v'lastReciver);
}

((slice, slice, slice)) $LastMessage$_constructor_lastMessage_lastSender_lastReciver(slice lastMessage, slice lastSender, slice lastReciver) inline {
    return (lastMessage, lastSender, lastReciver);
}

;;
;; Type: Proxy
;;

builder $Proxy$_store(builder build_0, (slice, int, slice, slice, slice) v) inline {
    var (v'owner, v'count, v'lastMessage, v'lastSender, v'lastReciver) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_int(v'count, 257);
    build_0 = ~ null?(v'lastMessage) ? build_0.store_int(true, 1).store_ref(begin_cell().store_slice(v'lastMessage).end_cell()) : build_0.store_int(false, 1);
    build_0 = __tact_store_address_opt(build_0, v'lastSender);
    var build_1 = begin_cell();
    build_1 = __tact_store_address_opt(build_1, v'lastReciver);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((slice, int, slice, slice, slice))) $Proxy$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'count = sc_0~load_int(257);
    var v'lastMessage = sc_0~load_int(1) ? sc_0~load_ref().begin_parse() : null();
    var v'lastSender = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'lastReciver = sc_1~__tact_load_address_opt();
    return (sc_0, (v'owner, v'count, v'lastMessage, v'lastSender, v'lastReciver));
}

(slice, ((slice))) $Proxy$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice, int, slice, slice, slice) $Proxy$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Proxy$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner) = $sc~$Proxy$init$_load();
        $sc.end_parse();
        return $Proxy$_contract_init(owner);
    }
}

() $Proxy$_contract_store((slice, int, slice, slice, slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Proxy$_store(b, v);
    set_data(b.end_cell());
}